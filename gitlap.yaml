stages:
  - clean
  - checkout
  - sonarqube-analysis
  - quality-gate
  - owasp-scan
  - trivy-fs-scan
  - docker-build-push
  - trivy-image-scan
  - deploy

variables:
  SCANNER_HOME: "/path/to/sonar-scanner"
  DOCKER_IMAGE: "ahmedbahaa2/netflix:latest"

clean_workspace:
  stage: clean
  script:
    - rm -rf *

checkout:
  stage: checkout
  script:
    - git clone https://github.com/AhmedBahaa7/Netflix.git

sonarqube_analysis:
  stage: sonarqube-analysis
  script:
    - |
      $SCANNER_HOME/bin/sonar-scanner \
        -Dsonar.projectName=Netflix \
        -Dsonar.projectKey=Netflix
  only:
    - main

quality_gate:
  stage: quality-gate
  script:
    - wait_for_quality_gate abortPipeline: false, credentialsId: 'Sonar-token'

owasp_scan:
  stage: owasp-scan
  script:
    - dependency-check --scan ./ --disableYarnAudit --disableNodeAudit --out .
    - mv dependency-check-report.html public/

trivy_fs_scan:
  stage: trivy-fs-scan
  script:
    - trivy fs . > trivyfs.txt
    - mv trivyfs.txt public/

docker_build_push:
  stage: docker-build-push
  script:
    - docker build --build-arg TMDB_V3_API_KEY=810db80c487ebc70067a80437cd3ecab -t netflix -f Netflix/netflixc/Dockerfile Netflix/netflixc
    - docker tag netflix $DOCKER_IMAGE
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
    - docker push $DOCKER_IMAGE

trivy_image_scan:
  stage: trivy-image-scan
  script:
    - trivy image $DOCKER_IMAGE > trivyimage.txt
    - mv trivyimage.txt public/

deploy:
  stage: deploy
  script:
    - docker run -d --name netflix -p 8081:80 $DOCKER_IMAGE

default:
  artifacts:
    paths:
      - public/*
